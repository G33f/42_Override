Эта программа отправляет фальшивое сообщение. Чтобы отправить его, он использует структуру с буфером для сообщения, один для имени пользователя и длины буфера сообщения:

---------------------------------------------------------------------------------------------------------

struct s_mail {
	char	msg[0x8c];
	char	username[0x28];
	int	msg_len;
};

---------------------------------------------------------------------------------------------------------

Эти буферы будут заполнены "set_username" и "set_msg".

В функции set_username локальный буфер размером 0x80 байт используется для хранения имени пользователя. Затем 0x29 байтов этого локального буфера копируются в буфер имени пользователя в структуре. Поскольку размер буфера имени пользователя в структуре составляет 0x28 байт, после него копируется 1 байт, который заменяет значение длины сообщения.

В функции set_msg локальный буфер размером 0x400 байт используется для хранения сообщения пользователя, а strncpy будет использовать значение длины сообщения в структуре для заполнения буфера сообщения внутри структуры. Это означает, что мы можем использовать переполнение буфера, чтобы перезаписать старый eip 'handle_msg'!

Чтобы переписать старый eip, нам нужно написать имя пользователя из 0x28 символов, длину для переполнения и перезаписать старый eip (sizeof (struct s_mail) + padding + old ebp + old eip -> 0xd0), используйте новую строку в конце буфер, заполняем память до нового адреса старого eip.

Для нового адреса есть скрытая функция, которая называется secret_backdoor. Он читает команду на stdin и использует ее для «системного» вызова. Для переполнения буфера мы будем использовать адрес этой функции (0x000055555555488c) для использования этого двоичного файла. Полезная нагрузка:

---------------------------------------------------------------------------------------------------------

level09@OverRide:~$ cat  <(python -c 'print("a" * 0x28 + "\xd0" + "\n" + "a" * 0xc8 + "\x8c\x48\x55\x55\x55\x55\x00\x00" + "/bin/bash")') - | /home/users/level09/level09

---------------------------------------------------------------------------------------------------------